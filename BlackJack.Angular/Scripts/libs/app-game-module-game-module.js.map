{"version":3,"sources":["webpack:///./node_modules/json-typescript-mapper/index.js","webpack:///./node_modules/json-typescript-mapper/libs/utils.ts","webpack:///./node_modules/reflect-metadata/Reflect.js","webpack:///./src/app/game-module/dealer-output/dealer-output.component.html","webpack:///./src/app/game-module/dealer-output/dealer-output.component.ts","webpack:///./src/app/game-module/game-routing.module.ts","webpack:///./src/app/game-module/game.module.ts","webpack:///./src/app/game-module/game/game.component.css","webpack:///./src/app/game-module/game/game.component.html","webpack:///./src/app/game-module/game/game.component.ts","webpack:///./src/app/game-module/player-output/player-output.component.html","webpack:///./src/app/game-module/player-output/player-output.component.ts","webpack:///./src/app/shared/mapping-models/game-mapping-model.ts","webpack:///./src/app/shared/mapping-models/player-mapping-model.ts","webpack:///./src/app/shared/services/round.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,mBAAO,CAAC,oEAAkB;AAC1B,cAAc,mBAAO,CAAC,yEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,cAAc,OAAO;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,cAAc,OAAO;AACrB,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,YAAY,sBAAsB;AAClC;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,qCAAqC,0CAA0C,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,4CAA4C,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,WAAW,OAAO;AAClB;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB,UAAU;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B,EAAE;AAC3E;AACA;AACA;AACA,iC;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AAAO,sBAAsB,GAAO,EAAE,IAAwB;IAC1D,OAAO,OAAO,GAAG,KAAK,IAAI,CAAC;AAC/B,CAAC;AAEM,qCAAqC,GAAO;IAC/C,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,MAAM,IAAI,GAAG,KAAK,MAAM;QAChH,GAAG,YAAY,MAAM,IAAI,GAAG,KAAK,MAAM;QACvC,GAAG,YAAY,OAAO,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;AAChD,CAAC;AAEM,6BAA6B,KAAc;IAC9C,IAAI,KAAK,KAAK,KAAK,EAAE;QACjB,OAAO,IAAI,CAAC;KACf;IACD,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,gBAAgB;AACrE,CAAC;;;;;;;;;;;;ACfD;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mDAAmD;AAC3G;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,6BAA6B,gBAAgB,kBAAkB;AAC/D;AACA;AACA;AACA;AACA,+BAA+B,4CAA4C;AAC3E;AACA,mCAAmC,wBAAwB,kBAAkB,EAAE;AAC/E,mCAAmC,yBAAyB,EAAE,EAAE;AAChE;AACA,uCAAuC,8BAA8B;AACrE,uCAAuC,mBAAmB,EAAE;AAC5D;AACA,uCAAuC,qDAAqD;AAC5F,uCAAuC,iBAAiB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B;AACjsCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF,qEAAqE,aAAa;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B,EAAE;AAClE;AACA;AACA,iBAAiB;AACjB,oDAAoD,+CAA+C;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,0DAA0D;AAC5G,oDAAoD,4DAA4D;AAChH,qDAAqD,4DAA4D;AACjH,2DAA2D,uBAAuB;AAClF,6DAA6D,uBAAuB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uBAAuB,EAAE;AAC/D;AACA;AACA,iBAAiB;AACjB,sDAAsD,6BAA6B;AACnF,sDAAsD,0CAA0C;AAChG,yDAAyD,gCAAgC;AACzF,mDAAmD,mBAAmB;AACtE,kDAAkD,yBAAyB;AAC3E,oDAAoD,2BAA2B;AAC/E,qDAAqD,4BAA4B;AACjF,2DAA2D,oBAAoB;AAC/E,6DAA6D,oBAAoB;AACjF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"app-game-module-game-module.js","sourcesContent":["\"use strict\";\r\nrequire('reflect-metadata');\r\nvar utils_1 = require('./libs/utils');\r\n/**\r\n * Decorator variable name\r\n *\r\n * @const\r\n */\r\nvar JSON_META_DATA_KEY = 'JsonProperty';\r\n/**\r\n * DecoratorMetaData\r\n * Model used for decoration parameters\r\n *\r\n * @class\r\n * @property {string} name, indicate which json property needed to map\r\n * @property {string} clazz, if the target is not primitive type, map it to corresponding class\r\n */\r\nvar DecoratorMetaData = (function () {\r\n    function DecoratorMetaData(name, clazz) {\r\n        this.name = name;\r\n        this.clazz = clazz;\r\n    }\r\n    return DecoratorMetaData;\r\n}());\r\n/**\r\n * JsonProperty\r\n *\r\n * @function\r\n * @property {IDecoratorMetaData<T>|string} metadata, encapsulate it to DecoratorMetaData for standard use\r\n * @return {(target:Object, targetKey:string | symbol)=> void} decorator function\r\n */\r\nfunction JsonProperty(metadata) {\r\n    var decoratorMetaData;\r\n    if (utils_1.isTargetType(metadata, 'string')) {\r\n        decoratorMetaData = new DecoratorMetaData(metadata);\r\n    }\r\n    else if (utils_1.isTargetType(metadata, 'object')) {\r\n        decoratorMetaData = metadata;\r\n    }\r\n    else {\r\n        throw new Error('index.ts: meta data in Json property is undefined. meta data: ' + metadata);\r\n    }\r\n    return Reflect.metadata(JSON_META_DATA_KEY, decoratorMetaData);\r\n}\r\nexports.JsonProperty = JsonProperty;\r\n/**\r\n * getClazz\r\n *\r\n * @function\r\n * @property {any} target object\r\n * @property {string} propertyKey, used as target property\r\n * @return {Function} Function/Class indicate the target property type\r\n * @description Used for type checking, if it is not primitive type, loop inside recursively\r\n */\r\nfunction getClazz(target, propertyKey) {\r\n    return Reflect.getMetadata('design:type', target, propertyKey);\r\n}\r\n/**\r\n * getJsonProperty\r\n *\r\n * @function\r\n * @property {any} target object\r\n * @property {string} propertyKey, used as target property\r\n * @return {IDecoratorMetaData<T>} Obtain target property decorator meta data\r\n */\r\nfunction getJsonProperty(target, propertyKey) {\r\n    return Reflect.getMetadata(JSON_META_DATA_KEY, target, propertyKey);\r\n}\r\n/**\r\n * hasAnyNullOrUndefined\r\n *\r\n * @function\r\n * @property {...args:any[]} any arguments\r\n * @return {IDecoratorMetaData<T>} check if any arguments is null or undefined\r\n */\r\nfunction hasAnyNullOrUndefined() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i - 0] = arguments[_i];\r\n    }\r\n    return args.some(function (arg) { return arg === null || arg === undefined; });\r\n}\r\nfunction mapFromJson(decoratorMetadata, instance, json, key) {\r\n    /**\r\n     * if decorator name is not found, use target property key as decorator name. It means mapping it directly\r\n     */\r\n    var decoratorName = decoratorMetadata.name || key;\r\n    var innerJson = json ? json[decoratorName] : undefined;\r\n    var clazz = getClazz(instance, key);\r\n    if (utils_1.isArrayOrArrayClass(clazz)) {\r\n        var metadata_1 = getJsonProperty(instance, key);\r\n        if (metadata_1 && metadata_1.clazz || utils_1.isPrimitiveOrPrimitiveClass(clazz)) {\r\n            if (innerJson && utils_1.isArrayOrArrayClass(innerJson)) {\r\n                return innerJson.map(function (item) { return deserialize(metadata_1.clazz, item); });\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            return innerJson;\r\n        }\r\n    }\r\n    if (!utils_1.isPrimitiveOrPrimitiveClass(clazz)) {\r\n        return deserialize(clazz, innerJson);\r\n    }\r\n    return json ? json[decoratorName] : undefined;\r\n}\r\n/**\r\n * deserialize\r\n *\r\n * @function\r\n * @param {{new():T}} clazz, class type which is going to initialize and hold a mapping json\r\n * @param {Object} json, input json object which to be mapped\r\n *\r\n * @return {T} return mapped object\r\n */\r\nfunction deserialize(Clazz, json) {\r\n    /**\r\n     * As it is a recursive function, ignore any arguments that are unset\r\n     */\r\n    if (hasAnyNullOrUndefined(Clazz, json)) {\r\n        return void 0;\r\n    }\r\n    /**\r\n     * Prevent non-json continue\r\n     */\r\n    if (!utils_1.isTargetType(json, 'object')) {\r\n        return void 0;\r\n    }\r\n    /**\r\n     * init root class to contain json\r\n     */\r\n    var instance = new Clazz();\r\n    Object.keys(instance).forEach(function (key) {\r\n        /**\r\n         * get decoratorMetaData, structure: { name?:string, clazz?:{ new():T } }\r\n         */\r\n        var decoratorMetaData = getJsonProperty(instance, key);\r\n        /**\r\n         * pass value to instance\r\n         */\r\n        if (decoratorMetaData && decoratorMetaData.customConverter) {\r\n            instance[key] = decoratorMetaData.customConverter.fromJson(json[decoratorMetaData.name || key]);\r\n        }\r\n        else {\r\n            instance[key] = decoratorMetaData ? mapFromJson(decoratorMetaData, instance, json, key) : json[key];\r\n        }\r\n    });\r\n    return instance;\r\n}\r\nexports.deserialize = deserialize;\r\n/**\r\n * Serialize: Creates a ready-for-json-serialization object from the provided model instance.\r\n * Only @JsonProperty decorated properties in the model instance are processed.\r\n *\r\n * @param instance an instance of a model class\r\n * @returns {any} an object ready to be serialized to JSON\r\n */\r\nfunction serialize(instance) {\r\n    if (!utils_1.isTargetType(instance, 'object') || utils_1.isArrayOrArrayClass(instance)) {\r\n        return instance;\r\n    }\r\n    var obj = {};\r\n    Object.keys(instance).forEach(function (key) {\r\n        var metadata = getJsonProperty(instance, key);\r\n        obj[metadata && metadata.name ? metadata.name : key] = serializeProperty(metadata, instance[key]);\r\n    });\r\n    return obj;\r\n}\r\nexports.serialize = serialize;\r\n/**\r\n * Prepare a single property to be serialized to JSON.\r\n *\r\n * @param metadata\r\n * @param prop\r\n * @returns {any}\r\n */\r\nfunction serializeProperty(metadata, prop) {\r\n    if (!metadata || metadata.excludeToJson === true) {\r\n        return;\r\n    }\r\n    if (metadata.customConverter) {\r\n        return metadata.customConverter.toJson(prop);\r\n    }\r\n    if (!metadata.clazz) {\r\n        return prop;\r\n    }\r\n    if (utils_1.isArrayOrArrayClass(prop)) {\r\n        return prop.map(function (propItem) { return serialize(propItem); });\r\n    }\r\n    return serialize(prop);\r\n}\r\n//# sourceMappingURL=index.js.map","export function isTargetType(val:any, type:\"object\" | \"string\"):boolean {\r\n    return typeof val === type;\r\n}\r\n\r\nexport function isPrimitiveOrPrimitiveClass(obj:any):boolean {\r\n    return !!(['string', 'boolean', 'number'].indexOf((typeof obj)) > -1 || (obj instanceof String || obj === String ||\r\n    obj instanceof Number || obj === Number ||\r\n    obj instanceof Boolean || obj === Boolean));\r\n}\r\n\r\nexport function isArrayOrArrayClass(clazz:Function):boolean {\r\n    if (clazz === Array) {\r\n        return true;\r\n    }\r\n    return Object.prototype.toString.call(clazz) === '[object Array]'\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n    (function (factory) {\r\n        var root = typeof global === \"object\" ? global :\r\n            typeof self === \"object\" ? self :\r\n                typeof this === \"object\" ? this :\r\n                    Function(\"return this;\")();\r\n        var exporter = makeExporter(Reflect);\r\n        if (typeof root.Reflect === \"undefined\") {\r\n            root.Reflect = Reflect;\r\n        }\r\n        else {\r\n            exporter = makeExporter(root.Reflect, exporter);\r\n        }\r\n        factory(exporter);\r\n        function makeExporter(target, previous) {\r\n            return function (key, value) {\r\n                if (typeof target[key] !== \"function\") {\r\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\r\n                }\r\n                if (previous)\r\n                    previous(key, value);\r\n            };\r\n        }\r\n    })(function (exporter) {\r\n        var hasOwn = Object.prototype.hasOwnProperty;\r\n        // feature test for Symbol support\r\n        var supportsSymbol = typeof Symbol === \"function\";\r\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        var HashMap = {\r\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n            create: supportsCreate\r\n                ? function () { return MakeDictionary(Object.create(null)); }\r\n                : supportsProto\r\n                    ? function () { return MakeDictionary({ __proto__: null }); }\r\n                    : function () { return MakeDictionary({}); },\r\n            has: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key); }\r\n                : function (map, key) { return key in map; },\r\n            get: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n                : function (map, key) { return map[key]; },\r\n        };\r\n        // Load global or shim versions of Map, Set, and WeakMap\r\n        var functionPrototype = Object.getPrototypeOf(Function);\r\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n        // [[Metadata]] internal slot\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n        var Metadata = new _WeakMap();\r\n        /**\r\n         * Applies a set of decorators to a property of a target object.\r\n         * @param decorators An array of decorators.\r\n         * @param target The target object.\r\n         * @param propertyKey (Optional) The property key to decorate.\r\n         * @param attributes (Optional) The property descriptor for the target key.\r\n         * @remarks Decorators are applied in reverse order.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Example = Reflect.decorate(decoratorsArray, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Object.defineProperty(Example, \"staticMethod\",\r\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n         *\r\n         *     // method (on prototype)\r\n         *     Object.defineProperty(Example.prototype, \"method\",\r\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n         *\r\n         */\r\n        function decorate(decorators, target, propertyKey, attributes) {\r\n            if (!IsUndefined(propertyKey)) {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                    throw new TypeError();\r\n                if (IsNull(attributes))\r\n                    attributes = undefined;\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n                return DecorateProperty(decorators, target, propertyKey, attributes);\r\n            }\r\n            else {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                return DecorateConstructor(decorators, target);\r\n            }\r\n        }\r\n        exporter(\"decorate\", decorate);\r\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n        /**\r\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n         * @param metadataKey The key for the metadata entry.\r\n         * @param metadataValue The value for the metadata entry.\r\n         * @returns A decorator function.\r\n         * @remarks\r\n         * If `metadataKey` is already defined for the target and target key, the\r\n         * metadataValue for that key will be overwritten.\r\n         * @example\r\n         *\r\n         *     // constructor\r\n         *     @Reflect.metadata(key, value)\r\n         *     class Example {\r\n         *     }\r\n         *\r\n         *     // property (on constructor, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticProperty;\r\n         *     }\r\n         *\r\n         *     // property (on prototype, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         property;\r\n         *     }\r\n         *\r\n         *     // method (on constructor)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticMethod() { }\r\n         *     }\r\n         *\r\n         *     // method (on prototype)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         method() { }\r\n         *     }\r\n         *\r\n         */\r\n        function metadata(metadataKey, metadataValue) {\r\n            function decorator(target, propertyKey) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n            }\r\n            return decorator;\r\n        }\r\n        exporter(\"metadata\", metadata);\r\n        /**\r\n         * Define a unique metadata entry on the target.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param metadataValue A value that contains attached metadata.\r\n         * @param target The target object on which to define metadata.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n         *\r\n         *     // decorator factory as metadata-producing annotation.\r\n         *     function MyAnnotation(options): Decorator {\r\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n         *     }\r\n         *\r\n         */\r\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        exporter(\"defineMetadata\", defineMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasMetadata\", hasMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getMetadata\", getMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadata\", getOwnMetadata);\r\n        /**\r\n         * Gets the metadata keys defined on the target object or its prototype chain.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getMetadataKeys\", getMetadataKeys);\r\n        /**\r\n         * Gets the unique metadata keys defined on the target object.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\r\n        /**\r\n         * Deletes the metadata entry from the target object with the provided key.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function deleteMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            if (!metadataMap.delete(metadataKey))\r\n                return false;\r\n            if (metadataMap.size > 0)\r\n                return true;\r\n            var targetMetadata = Metadata.get(target);\r\n            targetMetadata.delete(propertyKey);\r\n            if (targetMetadata.size > 0)\r\n                return true;\r\n            Metadata.delete(target);\r\n            return true;\r\n        }\r\n        exporter(\"deleteMetadata\", deleteMetadata);\r\n        function DecorateConstructor(decorators, target) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsConstructor(decorated))\r\n                        throw new TypeError();\r\n                    target = decorated;\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target, propertyKey, descriptor);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsObject(decorated))\r\n                        throw new TypeError();\r\n                    descriptor = decorated;\r\n                }\r\n            }\r\n            return descriptor;\r\n        }\r\n        function GetOrCreateMetadataMap(O, P, Create) {\r\n            var targetMetadata = Metadata.get(O);\r\n            if (IsUndefined(targetMetadata)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                targetMetadata = new _Map();\r\n                Metadata.set(O, targetMetadata);\r\n            }\r\n            var metadataMap = targetMetadata.get(P);\r\n            if (IsUndefined(metadataMap)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                metadataMap = new _Map();\r\n                targetMetadata.set(P, metadataMap);\r\n            }\r\n            return metadataMap;\r\n        }\r\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return true;\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n            return false;\r\n        }\r\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            return ToBoolean(metadataMap.has(MetadataKey));\r\n        }\r\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n            return undefined;\r\n        }\r\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return undefined;\r\n            return metadataMap.get(MetadataKey);\r\n        }\r\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n            metadataMap.set(MetadataKey, MetadataValue);\r\n        }\r\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n        function OrdinaryMetadataKeys(O, P) {\r\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (parent === null)\r\n                return ownKeys;\r\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n            if (parentKeys.length <= 0)\r\n                return ownKeys;\r\n            if (ownKeys.length <= 0)\r\n                return parentKeys;\r\n            var set = new _Set();\r\n            var keys = [];\r\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n                var key = ownKeys_1[_i];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n                var key = parentKeys_1[_a];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n        function OrdinaryOwnMetadataKeys(O, P) {\r\n            var keys = [];\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return keys;\r\n            var keysObj = metadataMap.keys();\r\n            var iterator = GetIterator(keysObj);\r\n            var k = 0;\r\n            while (true) {\r\n                var next = IteratorStep(iterator);\r\n                if (!next) {\r\n                    keys.length = k;\r\n                    return keys;\r\n                }\r\n                var nextValue = IteratorValue(next);\r\n                try {\r\n                    keys[k] = nextValue;\r\n                }\r\n                catch (e) {\r\n                    try {\r\n                        IteratorClose(iterator);\r\n                    }\r\n                    finally {\r\n                        throw e;\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        // 6 ECMAScript Data Typ0es and Values\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n        function Type(x) {\r\n            if (x === null)\r\n                return 1 /* Null */;\r\n            switch (typeof x) {\r\n                case \"undefined\": return 0 /* Undefined */;\r\n                case \"boolean\": return 2 /* Boolean */;\r\n                case \"string\": return 3 /* String */;\r\n                case \"symbol\": return 4 /* Symbol */;\r\n                case \"number\": return 5 /* Number */;\r\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n                default: return 6 /* Object */;\r\n            }\r\n        }\r\n        // 6.1.1 The Undefined Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n        function IsUndefined(x) {\r\n            return x === undefined;\r\n        }\r\n        // 6.1.2 The Null Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n        function IsNull(x) {\r\n            return x === null;\r\n        }\r\n        // 6.1.5 The Symbol Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n        function IsSymbol(x) {\r\n            return typeof x === \"symbol\";\r\n        }\r\n        // 6.1.7 The Object Type\r\n        // https://tc39.github.io/ecma262/#sec-object-type\r\n        function IsObject(x) {\r\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n        }\r\n        // 7.1 Type Conversion\r\n        // https://tc39.github.io/ecma262/#sec-type-conversion\r\n        // 7.1.1 ToPrimitive(input [, PreferredType])\r\n        // https://tc39.github.io/ecma262/#sec-toprimitive\r\n        function ToPrimitive(input, PreferredType) {\r\n            switch (Type(input)) {\r\n                case 0 /* Undefined */: return input;\r\n                case 1 /* Null */: return input;\r\n                case 2 /* Boolean */: return input;\r\n                case 3 /* String */: return input;\r\n                case 4 /* Symbol */: return input;\r\n                case 5 /* Number */: return input;\r\n            }\r\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n            if (exoticToPrim !== undefined) {\r\n                var result = exoticToPrim.call(input, hint);\r\n                if (IsObject(result))\r\n                    throw new TypeError();\r\n                return result;\r\n            }\r\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n        }\r\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n        function OrdinaryToPrimitive(O, hint) {\r\n            if (hint === \"string\") {\r\n                var toString_1 = O.toString;\r\n                if (IsCallable(toString_1)) {\r\n                    var result = toString_1.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var toString_2 = O.toString;\r\n                if (IsCallable(toString_2)) {\r\n                    var result = toString_2.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            throw new TypeError();\r\n        }\r\n        // 7.1.2 ToBoolean(argument)\r\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n        function ToBoolean(argument) {\r\n            return !!argument;\r\n        }\r\n        // 7.1.12 ToString(argument)\r\n        // https://tc39.github.io/ecma262/#sec-tostring\r\n        function ToString(argument) {\r\n            return \"\" + argument;\r\n        }\r\n        // 7.1.14 ToPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-topropertykey\r\n        function ToPropertyKey(argument) {\r\n            var key = ToPrimitive(argument, 3 /* String */);\r\n            if (IsSymbol(key))\r\n                return key;\r\n            return ToString(key);\r\n        }\r\n        // 7.2 Testing and Comparison Operations\r\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n        // 7.2.2 IsArray(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isarray\r\n        function IsArray(argument) {\r\n            return Array.isArray\r\n                ? Array.isArray(argument)\r\n                : argument instanceof Object\r\n                    ? argument instanceof Array\r\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n        }\r\n        // 7.2.3 IsCallable(argument)\r\n        // https://tc39.github.io/ecma262/#sec-iscallable\r\n        function IsCallable(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.4 IsConstructor(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isconstructor\r\n        function IsConstructor(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.7 IsPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n        function IsPropertyKey(argument) {\r\n            switch (Type(argument)) {\r\n                case 3 /* String */: return true;\r\n                case 4 /* Symbol */: return true;\r\n                default: return false;\r\n            }\r\n        }\r\n        // 7.3 Operations on Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n        // 7.3.9 GetMethod(V, P)\r\n        // https://tc39.github.io/ecma262/#sec-getmethod\r\n        function GetMethod(V, P) {\r\n            var func = V[P];\r\n            if (func === undefined || func === null)\r\n                return undefined;\r\n            if (!IsCallable(func))\r\n                throw new TypeError();\r\n            return func;\r\n        }\r\n        // 7.4 Operations on Iterator Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n        function GetIterator(obj) {\r\n            var method = GetMethod(obj, iteratorSymbol);\r\n            if (!IsCallable(method))\r\n                throw new TypeError(); // from Call\r\n            var iterator = method.call(obj);\r\n            if (!IsObject(iterator))\r\n                throw new TypeError();\r\n            return iterator;\r\n        }\r\n        // 7.4.4 IteratorValue(iterResult)\r\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n        function IteratorValue(iterResult) {\r\n            return iterResult.value;\r\n        }\r\n        // 7.4.5 IteratorStep(iterator)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n        function IteratorStep(iterator) {\r\n            var result = iterator.next();\r\n            return result.done ? false : result;\r\n        }\r\n        // 7.4.6 IteratorClose(iterator, completion)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n        function IteratorClose(iterator) {\r\n            var f = iterator[\"return\"];\r\n            if (f)\r\n                f.call(iterator);\r\n        }\r\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n        function OrdinaryGetPrototypeOf(O) {\r\n            var proto = Object.getPrototypeOf(O);\r\n            if (typeof O !== \"function\" || O === functionPrototype)\r\n                return proto;\r\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n            // Try to determine the superclass constructor. Compatible implementations\r\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n            // or ensure each class has a valid `constructor` property on its prototype that\r\n            // points back to the constructor.\r\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n            if (proto !== functionPrototype)\r\n                return proto;\r\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n            var prototype = O.prototype;\r\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n            if (prototypeProto == null || prototypeProto === Object.prototype)\r\n                return proto;\r\n            // If the constructor was not a function, then we cannot determine the heritage.\r\n            var constructor = prototypeProto.constructor;\r\n            if (typeof constructor !== \"function\")\r\n                return proto;\r\n            // If we have some kind of self-reference, then we cannot determine the heritage.\r\n            if (constructor === O)\r\n                return proto;\r\n            // we have a pretty good guess at the heritage.\r\n            return constructor;\r\n        }\r\n        // naive Map shim\r\n        function CreateMapPolyfill() {\r\n            var cacheSentinel = {};\r\n            var arraySentinel = [];\r\n            var MapIterator = (function () {\r\n                function MapIterator(keys, values, selector) {\r\n                    this._index = 0;\r\n                    this._keys = keys;\r\n                    this._values = values;\r\n                    this._selector = selector;\r\n                }\r\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n                MapIterator.prototype.next = function () {\r\n                    var index = this._index;\r\n                    if (index >= 0 && index < this._keys.length) {\r\n                        var result = this._selector(this._keys[index], this._values[index]);\r\n                        if (index + 1 >= this._keys.length) {\r\n                            this._index = -1;\r\n                            this._keys = arraySentinel;\r\n                            this._values = arraySentinel;\r\n                        }\r\n                        else {\r\n                            this._index++;\r\n                        }\r\n                        return { value: result, done: false };\r\n                    }\r\n                    return { value: undefined, done: true };\r\n                };\r\n                MapIterator.prototype.throw = function (error) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    throw error;\r\n                };\r\n                MapIterator.prototype.return = function (value) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    return { value: value, done: true };\r\n                };\r\n                return MapIterator;\r\n            }());\r\n            return (function () {\r\n                function Map() {\r\n                    this._keys = [];\r\n                    this._values = [];\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                }\r\n                Object.defineProperty(Map.prototype, \"size\", {\r\n                    get: function () { return this._keys.length; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n                Map.prototype.get = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    return index >= 0 ? this._values[index] : undefined;\r\n                };\r\n                Map.prototype.set = function (key, value) {\r\n                    var index = this._find(key, /*insert*/ true);\r\n                    this._values[index] = value;\r\n                    return this;\r\n                };\r\n                Map.prototype.delete = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    if (index >= 0) {\r\n                        var size = this._keys.length;\r\n                        for (var i = index + 1; i < size; i++) {\r\n                            this._keys[i - 1] = this._keys[i];\r\n                            this._values[i - 1] = this._values[i];\r\n                        }\r\n                        this._keys.length--;\r\n                        this._values.length--;\r\n                        if (key === this._cacheKey) {\r\n                            this._cacheKey = cacheSentinel;\r\n                            this._cacheIndex = -2;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                Map.prototype.clear = function () {\r\n                    this._keys.length = 0;\r\n                    this._values.length = 0;\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                };\r\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n                Map.prototype._find = function (key, insert) {\r\n                    if (this._cacheKey !== key) {\r\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                    }\r\n                    if (this._cacheIndex < 0 && insert) {\r\n                        this._cacheIndex = this._keys.length;\r\n                        this._keys.push(key);\r\n                        this._values.push(undefined);\r\n                    }\r\n                    return this._cacheIndex;\r\n                };\r\n                return Map;\r\n            }());\r\n            function getKey(key, _) {\r\n                return key;\r\n            }\r\n            function getValue(_, value) {\r\n                return value;\r\n            }\r\n            function getEntry(key, value) {\r\n                return [key, value];\r\n            }\r\n        }\r\n        // naive Set shim\r\n        function CreateSetPolyfill() {\r\n            return (function () {\r\n                function Set() {\r\n                    this._map = new _Map();\r\n                }\r\n                Object.defineProperty(Set.prototype, \"size\", {\r\n                    get: function () { return this._map.size; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Set.prototype.has = function (value) { return this._map.has(value); };\r\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n                Set.prototype.clear = function () { this._map.clear(); };\r\n                Set.prototype.keys = function () { return this._map.keys(); };\r\n                Set.prototype.values = function () { return this._map.values(); };\r\n                Set.prototype.entries = function () { return this._map.entries(); };\r\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n                return Set;\r\n            }());\r\n        }\r\n        // naive WeakMap shim\r\n        function CreateWeakMapPolyfill() {\r\n            var UUID_SIZE = 16;\r\n            var keys = HashMap.create();\r\n            var rootKey = CreateUniqueKey();\r\n            return (function () {\r\n                function WeakMap() {\r\n                    this._key = CreateUniqueKey();\r\n                }\r\n                WeakMap.prototype.has = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\r\n                };\r\n                WeakMap.prototype.get = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n                };\r\n                WeakMap.prototype.set = function (target, value) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                    table[this._key] = value;\r\n                    return this;\r\n                };\r\n                WeakMap.prototype.delete = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? delete table[this._key] : false;\r\n                };\r\n                WeakMap.prototype.clear = function () {\r\n                    // NOTE: not a real clear, just makes the previous data unreachable\r\n                    this._key = CreateUniqueKey();\r\n                };\r\n                return WeakMap;\r\n            }());\r\n            function CreateUniqueKey() {\r\n                var key;\r\n                do\r\n                    key = \"@@WeakMap@@\" + CreateUUID();\r\n                while (HashMap.has(keys, key));\r\n                keys[key] = true;\r\n                return key;\r\n            }\r\n            function GetOrCreateWeakMapTable(target, create) {\r\n                if (!hasOwn.call(target, rootKey)) {\r\n                    if (!create)\r\n                        return undefined;\r\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n                }\r\n                return target[rootKey];\r\n            }\r\n            function FillRandomBytes(buffer, size) {\r\n                for (var i = 0; i < size; ++i)\r\n                    buffer[i] = Math.random() * 0xff | 0;\r\n                return buffer;\r\n            }\r\n            function GenRandomBytes(size) {\r\n                if (typeof Uint8Array === \"function\") {\r\n                    if (typeof crypto !== \"undefined\")\r\n                        return crypto.getRandomValues(new Uint8Array(size));\r\n                    if (typeof msCrypto !== \"undefined\")\r\n                        return msCrypto.getRandomValues(new Uint8Array(size));\r\n                    return FillRandomBytes(new Uint8Array(size), size);\r\n                }\r\n                return FillRandomBytes(new Array(size), size);\r\n            }\r\n            function CreateUUID() {\r\n                var data = GenRandomBytes(UUID_SIZE);\r\n                // mark as random - RFC 4122 § 4.4\r\n                data[6] = data[6] & 0x4f | 0x40;\r\n                data[8] = data[8] & 0xbf | 0x80;\r\n                var result = \"\";\r\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                    var byte = data[offset];\r\n                    if (offset === 4 || offset === 6 || offset === 8)\r\n                        result += \"-\";\r\n                    if (byte < 16)\r\n                        result += \"0\";\r\n                    result += byte.toString(16).toLowerCase();\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n        function MakeDictionary(obj) {\r\n            obj.__ = undefined;\r\n            delete obj.__;\r\n            return obj;\r\n        }\r\n    });\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map","module.exports = \"<p>Score: {{score}}</p>\\r\\n\\r\\n<div *ngIf=\\\"roundFirstPhase\\\">\\r\\n    <p>Card:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"roundSecondPhase\\\">\\r\\n    <p>CardScore: {{roundScore}}</p>\\r\\n    <p>Cards:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-dealer-output',\r\n    templateUrl: './dealer-output.component.html'\r\n})\r\nexport class DealerOutputComponent {\r\n    @Input() score: number;\r\n    @Input() roundScore: number;\r\n    @Input() cards: string[];\r\n    \r\n    roundFirstPhase: boolean = false;\r\n    roundSecondPhase: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    @Input()\r\n    set gameStage(stage: number) {\r\n        if (stage == 1) {\r\n            this.roundFirstPhase = true;\r\n            this.roundSecondPhase = false;\r\n        }\r\n\r\n        if (stage == 2) {\r\n            this.roundFirstPhase = false;\r\n            this.roundSecondPhase = true;\r\n        }\r\n\r\n        if (stage == 0) {\r\n            this.roundFirstPhase = false;\r\n            this.roundSecondPhase = false;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { GameComponent } from 'app/game-module/game/game.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GameComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class GameRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/modules/shared.module';\r\nimport { GameRoutingModule } from 'app/game-module/game-routing.module';\r\n\r\nimport { GameComponent } from 'app/game-module/game/game.component';\r\nimport { PlayerOutputComponent } from 'app/game-module/player-output/player-output.component';\r\nimport { DealerOutputComponent } from 'app/game-module/dealer-output/dealer-output.component';\r\n\r\nimport { RoundService } from 'app/shared/services/round.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        GameRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        GameComponent,\r\n        PlayerOutputComponent,\r\n        DealerOutputComponent\r\n    ],\r\n    providers: [\r\n        RoundService\r\n    ]\r\n})\r\nexport class GameModule { }\r\n","module.exports = \"\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row row-flex\\\">\\r\\n    <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-12 well\\\">\\r\\n        <h4><span class=\\\"label label-danger\\\">Dealer</span></h4>\\r\\n        <p>Name: {{game.dealer.name}}</p>\\r\\n        <app-dealer-output [score]=\\\"game.dealer.score\\\" [roundScore]=\\\"game.dealer.roundScore\\\" [cards]=\\\"game.dealer.cards\\\" [gameStage]=\\\"game.stage\\\"></app-dealer-output>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 col-md-8 col-sm-8 col-xs-12 well\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                <h4><span class=\\\"label label-primary\\\">Human</span></h4>\\r\\n                <p>Name: {{game.human.name}}</p>\\r\\n                <app-player-output [score]=\\\"game.human.score\\\" [bet]=\\\"game.human.bet\\\" [roundScore]=\\\"game.human.roundScore\\\" [cards]=\\\"game.human.cards\\\" [gameStage]=\\\"game.stage\\\"></app-player-output>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                <div *ngIf=\\\"betInput\\\">\\r\\n                    <label class=\\\"control-label\\\">Enter your bet: </label>\\r\\n                    <input [(ngModel)]=\\\"bet\\\" type=\\\"number\\\"\\r\\n                           class=\\\"form-control\\\" step=\\\"50\\\" min=\\\"50\\\" value=\\\"50\\\" max={{game.human.score}} />\\r\\n                    <br />\\r\\n                    <div *ngIf=\\\"betValidationError\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\">{{betValidationMessage}}</div>\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"startRound()\\\">Enter</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"takeCard\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"addCard(true)\\\">Take card</button>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"addCard(false)\\\">Don't take</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"blackJackDangerChoice\\\">\\r\\n                    <p>You have BlackJack and dealer has BlackJack-danger</p>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"continueRound(true)\\\">Continue round</button>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"continueRound(false)\\\">Take award (1:1)</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"endRound\\\">\\r\\n                    <p>{{roundResult}}</p>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"startNewRound()\\\">End round</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"endGame\\\">\\r\\n                    <p>{{gameResult}}</p>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"startNewGame()\\\">End game</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row row-flex\\\">\\r\\n    <div *ngFor=\\\"let bot of game.bots\\\" class=\\\"col-lg-2 col-md-4 col-sm-4 col-xs-6 well\\\">\\r\\n        <h4><span class=\\\"label label-default\\\">Bot</span></h4>\\r\\n        <p>Name: {{bot.name}}</p>\\r\\n        <app-player-output [score]=\\\"bot.score\\\" [roundScore]=\\\"bot.roundScore\\\" [bet]=\\\"bot.bet\\\" [cards]=\\\"bot.cards\\\" [gameStage]=\\\"game.stage\\\"></app-player-output>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { deserialize } from 'json-typescript-mapper';\r\n\r\nimport { RoundService } from 'app/shared/services/round.service';\r\nimport { StartService } from 'app/shared/services/start.service';\r\n\r\nimport { GameMappingModel } from 'app/shared/mapping-models/game-mapping-model';\r\nimport { PlayerMappingModel } from 'app/shared/mapping-models/player-mapping-model';\r\n\r\n@Component({\r\n    selector: 'app-game',\r\n    templateUrl: './game.component.html',\r\n    styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n    gameId: number;\r\n    game: GameMappingModel = new GameMappingModel();\r\n\r\n    betValidationMessage: string;\r\n    betValidationError: boolean = false;\r\n    bet: number = 50;\r\n    roundResult: string;\r\n    gameResult: string;\r\n\r\n    betInput: boolean = false;\r\n    takeCard: boolean = false;\r\n    blackJackDangerChoice: boolean = false;\r\n    endRound: boolean = false;\r\n    endGame: boolean = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private roundService: RoundService,\r\n        private startService: StartService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.gameId = params['Id'];\r\n            this.getGame();\r\n        });\r\n    }\r\n\r\n    gamePlayInitializer() {\r\n        if (this.game.stage == 0) {\r\n            this.gamePlayBetInput();\r\n        }\r\n\r\n        if (this.game.stage == 1) {\r\n            this.resumeAfterStartRound();\r\n        }\r\n\r\n        if (this.game.stage == 2) {\r\n            this.resumeAfterContinueRound();\r\n        }\r\n    }\r\n\r\n    getGame() {\r\n        this.startService.getGame(this.gameId)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.game = deserialize(GameMappingModel, data);\r\n\r\n                    if (data[\"IsGameOver\"] != \"\") {\r\n                        this.gameResult = data[\"IsGameOver\"];\r\n                        this.gamePlayEndGame();\r\n                    }\r\n\r\n                    this.gamePlayInitializer();\r\n                }\r\n            );\r\n    }\r\n\r\n    resumeAfterStartRound() {\r\n        this.roundService.resumeAfterStartRound(this.game.id)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.game = deserialize(GameMappingModel, data);\r\n                    this.startRoundGamePlay(data[\"BlackJackChoice\"], data[\"CanTakeCard\"]);\r\n                }\r\n            );\r\n    }\r\n\r\n    resumeAfterContinueRound() {\r\n        this.roundService.resumeAfterContinueRound(this.game.id)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.game = deserialize(GameMappingModel, data);\r\n                    this.continueRoundGamePlay(data[\"RoundResult\"]);\r\n                }\r\n            );\r\n    }\r\n\r\n    addCard(takeCard: boolean) {\r\n        if (takeCard) {\r\n            this.roundService.addCard(this.game.id)\r\n                .subscribe(\r\n                (data) => {\r\n                    if (data[\"CanTakeCard\"]) {\r\n                        this.game.human = deserialize(PlayerMappingModel, data);\r\n                    }\r\n\r\n                    if (!data[\"CanTakeCard\"]) {\r\n                        this.continueRound(false);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n        if (!takeCard) {\r\n            this.continueRound(false);\r\n        }\r\n    }\r\n\r\n    startRoundGamePlay(blackJackChoice: boolean, canTakeCard: boolean) {\r\n        this.game.stage = 1;\r\n        this.betValidationError = false;\r\n        if (blackJackChoice) {\r\n            this.gamePlayBlackJackDangerChoice();\r\n        }\r\n        if (canTakeCard) {\r\n            this.gamePlayTakeCard();\r\n        }\r\n        if (!blackJackChoice && !canTakeCard) {\r\n            this.continueRound(false);\r\n        }\r\n    }\r\n\r\n    continueRoundGamePlay(roundResult: string) {\r\n        this.roundResult = roundResult;\r\n        this.gamePlayEndRound();\r\n    }\r\n\r\n    startRound() {\r\n        this.roundService.startRound(this.game.id, this.game.human.gamePlayerId, this.bet)\r\n            .subscribe(\r\n            (data) => {\r\n                this.game = deserialize(GameMappingModel, data[\"Data\"]);\r\n\r\n                if (data[\"Message\"] != null) {\r\n                    this.showValidationMessage(data[\"Message\"]);\r\n                }\r\n                if (data[\"Message\"] == null) {\r\n                    this.startRoundGamePlay(data[\"Data\"][\"BlackJackChoice\"], data[\"Data\"][\"CanTakeCard\"]);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    showValidationMessage(validationMessage: string) {\r\n        this.betValidationError = true;\r\n        this.betValidationMessage = validationMessage;\r\n    }\r\n\r\n    continueRound(continueRound: boolean) {\r\n        this.roundService.continueRound(this.game.id, continueRound)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.game = deserialize(GameMappingModel, data);\r\n                    this.continueRoundGamePlay(data[\"RoundResult\"]);\r\n                }\r\n            );\r\n    }\r\n\r\n    startNewGame() {\r\n        this.roundService.endGame(this.game.id, this.gameResult)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.router.navigate(['/user/' + this.game.human.name]);\r\n                }\r\n            );\r\n    }\r\n\r\n    startNewRound() {\r\n        this.roundService.endRound(this.game.id)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.getGame();\r\n                }\r\n            );\r\n    }\r\n\r\n    gamePlayBetInput() {\r\n        this.betInput = true;\r\n        this.takeCard = false;\r\n        this.blackJackDangerChoice = false;\r\n        this.endRound = false;\r\n        this.endGame = false;\r\n    }\r\n\r\n    gamePlayTakeCard() {\r\n        this.betInput = false;\r\n        this.takeCard = true;\r\n        this.blackJackDangerChoice = false;\r\n        this.endRound = false;\r\n        this.endGame = false;\r\n    }\r\n\r\n    gamePlayBlackJackDangerChoice() {\r\n        this.betInput = false;\r\n        this.takeCard = false;\r\n        this.blackJackDangerChoice = true;\r\n        this.endRound = false;\r\n        this.endGame = false;\r\n    }\r\n\r\n    gamePlayEndRound() {\r\n        this.game.stage = 2;\r\n        this.betInput = false;\r\n        this.takeCard = false;\r\n        this.blackJackDangerChoice = false;\r\n        this.endRound = true;\r\n        this.endGame = false;\r\n    }\r\n\r\n    gamePlayEndGame() {\r\n        this.betInput = false;\r\n        this.takeCard = false;\r\n        this.blackJackDangerChoice = false;\r\n        this.endRound = false;\r\n        this.endGame = true;\r\n    }\r\n}\r\n","module.exports = \"<p>Score: {{score}}</p>\\r\\n\\r\\n<div *ngIf=\\\"!roundStart\\\">\\r\\n    <p>Bet: {{bet}}</p>\\r\\n    <p>CardScore: {{roundScore}}</p>\\r\\n    <p>Cards:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-player-output',\r\n  templateUrl: './player-output.component.html'\r\n})\r\nexport class PlayerOutputComponent {\r\n    @Input() score: number;\r\n    @Input() roundScore: number;\r\n    @Input() bet: number;\r\n    @Input() cards: string[];\r\n\r\n    roundStart: boolean = true;\r\n    \r\n    @Input()\r\n    set gameStage (stage: number) {\r\n        this.roundStart = (stage == 0);\r\n    }\r\n}\r\n","﻿import { PlayerMappingModel } from 'app/shared/mapping-models/player-mapping-model';\r\nimport { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class GameMappingModel {\r\n    @JsonProperty('Id')\r\n    id: number;\r\n\r\n    @JsonProperty('Stage')\r\n    stage: number;\r\n\r\n    @JsonProperty({ clazz: PlayerMappingModel, name: 'Human' })\r\n    human: PlayerMappingModel;\r\n\r\n    @JsonProperty({ clazz: PlayerMappingModel, name: 'Dealer' })\r\n    dealer: PlayerMappingModel;\r\n\r\n    @JsonProperty({ clazz: PlayerMappingModel, name: 'Bots' })\r\n    bots: PlayerMappingModel[];\r\n\r\n    constructor() {\r\n        this.id = void 0;\r\n        this.stage = void 0;\r\n        this.human = void 0;\r\n        this.dealer = void 0;\r\n        this.bots = void 0;\r\n    }\r\n}","﻿import { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class PlayerMappingModel {\r\n    @JsonProperty('Id')\r\n    gamePlayerId: number;\r\n\r\n    @JsonProperty('Name')\r\n    name: string;\r\n\r\n    @JsonProperty('Score')\r\n    score: number;\r\n\r\n    @JsonProperty('Bet')\r\n    bet: number;\r\n\r\n    @JsonProperty('RoundScore')\r\n    roundScore: number;\r\n\r\n    @JsonProperty('Cards')\r\n    cards: string[];\r\n\r\n    constructor() {\r\n        this.gamePlayerId = void 0;\r\n        this.name = void 0;\r\n        this.score = void 0;\r\n        this.bet = void 0;\r\n        this.roundScore = void 0;\r\n        this.cards = void 0;\r\n    }\r\n}","﻿import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { GameModule } from 'app/game-module/game.module';\r\n\r\n@Injectable({\r\n    providedIn: GameModule\r\n})\r\nexport class RoundService {\r\n    constructor(private httpClient: HttpClient) { }\r\n    \r\n    startRound(gameId: number, humanGamePlayerId: number, bet: number) {\r\n        const body = { GameId: gameId, Bet: bet, GamePlayerId: humanGamePlayerId };\r\n        return this.httpClient.post('Round/Start', body);\r\n    }\r\n\r\n    continueRound(gameId: number, continueRound: boolean) {\r\n        const body = { GameId: gameId, ContinueRound: continueRound };\r\n        return this.httpClient.post('Round/Continue', body);\r\n    }\r\n\r\n    addCard(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Round/AddCard', options);\r\n    }\r\n\r\n    resumeAfterStartRound(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Round/ResumeAfterStart', options);\r\n    }\r\n\r\n    resumeAfterContinueRound(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Round/ResumeAfterContinue', options);\r\n    }\r\n\r\n    endRound(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Round/End', options);\r\n    }\r\n\r\n    endGame(gameId: number, gameResult: string) {\r\n        const body = { GameId: gameId, Result: gameResult };\r\n        return this.httpClient.post('Round/EndGame', body);\r\n    }\r\n}"],"sourceRoot":""}