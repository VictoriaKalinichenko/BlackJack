{"version":3,"sources":["webpack:///./src/app/shared/services/start.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA+D;AACpB;AAG3C;IACI,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,0CAAmB,GAAnB,UAAoB,QAAgB;QAChC,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC;YACtB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE3E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,iCAAU,GAAV,UAAW,QAAgB,EAAE,YAAoB;QAC7C,IAAM,IAAI,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC;QAChE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,iCAAU,GAAV,UAAW,QAAgB;QACvB,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC;YACtB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE3E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAe,GAAf,UAAgB,MAAc;QAC1B,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC;YACpB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEvE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA3BQ,YAAY;QADxB,gEAAU,EAAE;yCAEuB,+DAAU;OADjC,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB","file":"common.js","sourcesContent":["ï»¿import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StartService {\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getAuthorizedPlayer(userName: string) {\r\n        const options = userName ?\r\n            { params: new HttpParams().set('userName', userName.toString()) } : {};\r\n\r\n        return this.httpClient.get('Start/AuthorizePlayer', options);\r\n    }\r\n\r\n    createGame(playerId: number, amountOfBots: number) {\r\n        const body = { PlayerId: playerId, AmountOfBots: amountOfBots };\r\n        return this.httpClient.post('Start/CreateGame', body);\r\n    }\r\n\r\n    resumeGame(playerId: number) {\r\n        const options = playerId ?\r\n            { params: new HttpParams().set('playerId', playerId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Start/ResumeGame', options);\r\n    }\r\n\r\n    initializeRound(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Start/Initialize', options);\r\n    }\r\n}"],"sourceRoot":""}