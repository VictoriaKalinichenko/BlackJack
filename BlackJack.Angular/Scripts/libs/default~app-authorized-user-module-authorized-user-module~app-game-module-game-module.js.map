{"version":3,"sources":["webpack:///./src/app/authorized-user-module/authorized-user-routing.module.ts","webpack:///./src/app/authorized-user-module/authorized-user.module.ts","webpack:///./src/app/authorized-user-module/authorized-user/authorized-user.component.html","webpack:///./src/app/authorized-user-module/authorized-user/authorized-user.component.ts","webpack:///./src/app/authorized-user-module/start-page/start-page.component.html","webpack:///./src/app/authorized-user-module/start-page/start-page.component.ts","webpack:///./src/app/shared/services/start.service.ts","webpack:///./src/app/shared/services/user-name.service.ts","webpack:///./src/app/shared/view-models/authorize-player-start-view.ts"],"names":[],"mappings":"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","file":"default~app-authorized-user-module-authorized-user-module~app-game-module-game-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthorizedUserComponent } from 'app/authorized-user-module/authorized-user/authorized-user.component';\r\nimport { StartPageComponent } from 'app/authorized-user-module/start-page/start-page.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AuthorizedUserComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: StartPageComponent\r\n            },\r\n            {\r\n                path: 'game/:Id',\r\n                loadChildren: 'app/game-module/game.module#GameModule'\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AuthorizedUserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/modules/shared.module';\r\nimport { AuthorizedUserRoutingModule } from 'app/authorized-user-module/authorized-user-routing.module';\r\n\r\nimport { AuthorizedUserComponent } from 'app/authorized-user-module/authorized-user/authorized-user.component';\r\nimport { StartPageComponent } from 'app/authorized-user-module/start-page/start-page.component';\r\n\r\nimport { UserNameService } from 'app/shared/services/user-name.service';\r\nimport { StartService } from 'app/shared/services/start.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AuthorizedUserComponent,\r\n        StartPageComponent\r\n    ],\r\n    imports: [\r\n        AuthorizedUserRoutingModule,\r\n        SharedModule\r\n    ],\r\n    providers: [\r\n        UserNameService,\r\n        StartService\r\n    ]\r\n})\r\nexport class AuthorizedUserModule { }\r\n","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/user', userName]\\\">\\r\\n                Home\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li class=\\\"navbar-text\\\">\\r\\n                    <b>Log in as: {{userName}}</b>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/\\\">\\r\\n                        Log out\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>  \"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { UserNameService } from 'app/shared/services/user-name.service';\r\n\r\n@Component({\r\n    selector: 'app-authorized-user',\r\n    templateUrl: './authorized-user.component.html'\r\n})\r\nexport class AuthorizedUserComponent implements OnInit {\r\n    userName: string;\r\n\r\n    constructor(\r\n        private userNameService: UserNameService,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.userName = params['userName']\r\n        });\r\n\r\n        this.userNameService.setUserName(this.userName);\r\n    }\r\n}\r\n","module.exports = \"<h2>Main page</h2>\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"row row-flex\\\">\\r\\n    <div *ngIf=\\\"player.resumeGame\\\" class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12 well\\\">\\r\\n        <h3>Game resuming</h3>\\r\\n        <p>You can resume your last game</p>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <a class=\\\"btn btn-primary\\\" (click)=\\\"resumeGame()\\\">Resume game</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12 well\\\">\\r\\n        <h3>Start new game</h3>\\r\\n        <label class=\\\"control-label col-md-4\\\">Amount of bots:</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <input name=\\\"amount\\\" [(ngModel)]=\\\"amountOfBots\\\" class=\\\"form-control\\\"\\r\\n                   type=\\\"number\\\" value=\\\"0\\\" min=\\\"0\\\" max=\\\"5\\\"\\r\\n                   #amount=\\\"ngModel\\\" pattern=\\\"[0-5]\\\" />\\r\\n            <div [hidden]=\\\"amount.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                Amount of bots must be more than or equals to 0 and less than or equals to 5.\\r\\n            </div>\\r\\n            <br />\\r\\n            <button [disabled]=\\\"amount.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"startNewGame()\\\">Start new game</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserNameService } from 'app/shared/services/user-name.service';\r\nimport { StartService } from 'app/shared/services/start.service';\r\nimport { AuthorizePlayerStartView } from 'app/shared/view-models/authorize-player-start-view';\r\n\r\n@Component({\r\n  selector: 'app-start-page',\r\n  templateUrl: './start-page.component.html'\r\n})\r\nexport class StartPageComponent implements OnInit {\r\n    userName: string;\r\n    player: AuthorizePlayerStartView = new AuthorizePlayerStartView();\r\n    amountOfBots: number = 0;\r\n    gameId: number;\r\n\r\n    constructor (\r\n        private userNameService: UserNameService,\r\n        private startService: StartService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userName = this.userNameService.getUserName();\r\n        this.authUser(this.userName);\r\n    }\r\n\r\n    authUser(userName: string) {\r\n        this.startService.getAuthorizedPlayer(this.userName)\r\n            .subscribe(\r\n            (data) => {\r\n                this.player.name = data[\"Name\"];\r\n                this.player.playerId = data[\"PlayerId\"];\r\n                this.player.resumeGame = data[\"ResumeGame\"];\r\n            }\r\n        );\r\n    }\r\n\r\n    startNewGame() {\r\n        this.startService.createGame(this.player.playerId, this.amountOfBots)\r\n            .subscribe(\r\n            (data) => {\r\n                this.gameId = data[\"GameId\"];\r\n                this.router.navigate(['/user/' + this.userName + '/game/' + this.gameId]);\r\n            }\r\n        );\r\n    }\r\n\r\n    resumeGame() {\r\n        this.startService.resumeGame(this.player.playerId)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.gameId = data[\"GameId\"];\r\n                    this.router.navigate(['/user/' + this.userName + '/game/' + this.gameId]);\r\n                }\r\n            );\r\n    }\r\n}\r\n","﻿import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthorizedUserModule } from 'app/authorized-user-module/authorized-user.module';\r\n\r\n@Injectable({\r\n    providedIn: AuthorizedUserModule\r\n})\r\nexport class StartService {\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getAuthorizedPlayer(userName: string) {\r\n        const options = userName ?\r\n            { params: new HttpParams().set('userName', userName.toString()) } : {};\r\n\r\n        return this.httpClient.get('Start/AuthorizePlayer', options);\r\n    }\r\n\r\n    createGame(playerId: number, amountOfBots: number) {\r\n        const body = { PlayerId: playerId, AmountOfBots: amountOfBots };\r\n        return this.httpClient.post('Start/CreateGame', body);\r\n    }\r\n\r\n    resumeGame(playerId: number) {\r\n        const options = playerId ?\r\n            { params: new HttpParams().set('playerId', playerId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Start/ResumeGame', options);\r\n    }\r\n\r\n    getGame(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.httpClient.get('Start/InitializeRound', options);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AuthorizedUserModule } from 'app/authorized-user-module/authorized-user.module';\r\n\r\n@Injectable({\r\n    providedIn: AuthorizedUserModule\r\n})\r\nexport class UserNameService {\r\n    userName: string;\r\n    \r\n    setUserName(userName: string) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    getUserName() {\r\n        return this.userName;\r\n    }\r\n}\r\n","﻿export class AuthorizePlayerStartView {\r\n    name: string;\r\n    playerId: number;\r\n    resumeGame: boolean;\r\n}"],"sourceRoot":""}