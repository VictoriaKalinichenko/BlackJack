{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/shared/interceptors/request-interceptor.ts","webpack:///./src/app/shared/modules/shared.module.ts","webpack:///./src/app/shared/services/error.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/authorized-user-module/authorized-user.module\": [\n\t\t\"./src/app/authorized-user-module/authorized-user.module.ts\",\n\t\t\"common\",\n\t\t\"app-authorized-user-module-authorized-user-module\"\n\t],\n\t\"app/game-module/game.module\": [\n\t\t\"./src/app/game-module/game.module.ts\",\n\t\t\"common\",\n\t\t\"app-game-module-game-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomePageComponent } from 'app/home-page/home-page.component';\r\nimport { ErrorPageComponent } from 'app/error-page/error-page.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomePageComponent\r\n    },\r\n    {\r\n        path: 'user/:userName',\r\n        loadChildren: 'app/authorized-user-module/authorized-user.module#AuthorizedUserModule'\r\n    },\r\n    {\r\n        path: 'error',\r\n        component: ErrorPageComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { useHash: true }\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { SharedModule } from 'app/shared/modules/shared.module';\r\nimport { AppRoutingModule } from 'app/app-routing.module';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from 'app/app.component';\r\nimport { HomePageComponent } from 'app/home-page/home-page.component';\r\nimport { ErrorPageComponent } from 'app/error-page/error-page.component';\r\n\r\nimport { ErrorService } from 'app/shared/services/error.service';\r\nimport { RequestInterceptor } from 'app/shared/interceptors/request-interceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomePageComponent,\r\n        ErrorPageComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        SharedModule,\r\n        AppRoutingModule\r\n    ],\r\n    providers: [\r\n        ErrorService,\r\n        {\r\n            provide: APP_BASE_HREF,\r\n            useValue: '/'\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [\r\n        AppComponent\r\n    ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1>Error</h1>\\r\\n<p>\\r\\n  {{error}}\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ErrorService } from 'app/shared/services/error.service';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html'\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n    error: string;\r\n\r\n    constructor(\r\n        private errorService: ErrorService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.error = this.errorService.getError();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1>BlackJack</h1>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>User name: </label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"userName\\\" #name=\\\"ngModel\\\" required pattern=\\\"^[a-zA-Z]*$\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button [disabled]=\\\"name.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"authUser()\\\">Enter</button>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-home-page',\r\n    templateUrl: './home-page.component.html'\r\n})\r\nexport class HomePageComponent {\r\n    userName: string;\r\n\r\n    constructor(\r\n        private router: Router\r\n    ) { }\r\n\r\n    authUser() {\r\n        this.router.navigate(['/user', this.userName]);\r\n    }\r\n}\r\n","ï»¿import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from \"rxjs/operators\";\r\nimport { ErrorService } from 'app/shared/services/error.service';\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private errorService: ErrorService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(tap(\r\n            (event: HttpEvent<any>) => { },\r\n            (error: any) => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    console.log(error);\r\n                    this.errorService.setError(error[\"error\"][\"Message\"]);\r\n                    this.router.navigate(['/error']);\r\n                }\r\n            }\r\n        ));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n    error: string;\r\n\r\n    setError(error: string) {\r\n        this.error = error;\r\n    }\r\n\r\n    getError() {\r\n        return this.error;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}